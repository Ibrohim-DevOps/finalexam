apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-04-12T12:45:09Z"
    labels:
      author: azizxon
      last: final
    name: nginx1
    namespace: azizxon-final
    resourceVersion: "21130566"
    uid: 6237e3ca-ba07-4fa7-8200-a1a8267b5db2
  spec:
    containers:
    - image: nginx
      imagePullPolicy: Always
      name: nginx1
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-x6gkb
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: node3
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-x6gkb
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-04-12T12:45:11Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-04-12T12:45:09Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-04-12T12:45:11Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-04-12T12:45:11Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-04-12T12:45:09Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://d6644dd22eeb9f574982f35cbcc824115a9bab12c55ae52cf3f1bc5bc840bad5
      image: docker.io/library/nginx:latest
      imageID: docker.io/library/nginx@sha256:09369da6b10306312cd908661320086bf87fbae1b6b0c49a1f50ba531fef2eab
      lastState: {}
      name: nginx1
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-04-12T12:45:11Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-x6gkb
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 65.21.148.14
    hostIPs:
    - ip: 65.21.148.14
    phase: Running
    podIP: 10.233.67.55
    podIPs:
    - ip: 10.233.67.55
    qosClass: BestEffort
    startTime: "2025-04-12T12:45:09Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-04-12T12:45:31Z"
    labels:
      author: azizxon
      last: final
    name: nginx2
    namespace: azizxon-final
    resourceVersion: "21130664"
    uid: 5390dc8e-12d6-48c3-9525-7a6b25607636
  spec:
    containers:
    - image: nginx
      imagePullPolicy: Always
      name: nginx2
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-q8tgs
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: node3
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-q8tgs
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-04-12T12:45:33Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-04-12T12:45:31Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-04-12T12:45:33Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-04-12T12:45:33Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-04-12T12:45:31Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://575ab8b7b65609f564457162053e5c915aca65c0e6a9e367e5b79f49729c97d8
      image: docker.io/library/nginx:latest
      imageID: docker.io/library/nginx@sha256:09369da6b10306312cd908661320086bf87fbae1b6b0c49a1f50ba531fef2eab
      lastState: {}
      name: nginx2
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-04-12T12:45:32Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-q8tgs
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 65.21.148.14
    hostIPs:
    - ip: 65.21.148.14
    phase: Running
    podIP: 10.233.67.33
    podIPs:
    - ip: 10.233.67.33
    qosClass: BestEffort
    startTime: "2025-04-12T12:45:31Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"labels":{"author":"dilmurod","last":"final"},"name":"nginx1","namespace":"dilmurod-final"},"spec":{"containers":[{"image":"nginx","imagePullPolicy":"Always","name":"nginx1","resources":{}}]}}
    creationTimestamp: "2025-04-11T14:59:50Z"
    labels:
      author: dilmurod
      last: final
    name: nginx1
    namespace: dilmurod-final
    resourceVersion: "20461668"
    uid: fe2a539a-60b1-446a-807f-451f54eb5100
  spec:
    containers:
    - image: nginx
      imagePullPolicy: Always
      name: nginx1
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-sgjcp
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: node1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-sgjcp
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-04-11T14:59:53Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-04-11T14:59:50Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-04-11T14:59:53Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-04-11T14:59:53Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-04-11T14:59:50Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://8ad81c6b2d38bd653919de02d231c7e61e61098a6736efa74d1d2e2ffbbeff90
      image: docker.io/library/nginx:latest
      imageID: docker.io/library/nginx@sha256:09369da6b10306312cd908661320086bf87fbae1b6b0c49a1f50ba531fef2eab
      lastState: {}
      name: nginx1
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-04-11T14:59:52Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-sgjcp
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 65.21.184.121
    hostIPs:
    - ip: 65.21.184.121
    phase: Running
    podIP: 10.233.65.92
    podIPs:
    - ip: 10.233.65.92
    qosClass: BestEffort
    startTime: "2025-04-11T14:59:50Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"labels":{"author":"dilmurod","last":"final"},"name":"nginx2","namespace":"dilmurod-final"},"spec":{"containers":[{"image":"nginx","imagePullPolicy":"Always","name":"nginx2","resources":{}}]}}
    creationTimestamp: "2025-04-11T14:59:54Z"
    labels:
      author: dilmurod
      last: final
    name: nginx2
    namespace: dilmurod-final
    resourceVersion: "20461717"
    uid: b049d0d0-8960-4077-b442-be0a61d7a4e7
  spec:
    containers:
    - image: nginx
      imagePullPolicy: Always
      name: nginx2
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-w6zj8
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: node2
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-w6zj8
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-04-11T14:59:58Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-04-11T14:59:54Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-04-11T14:59:58Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-04-11T14:59:58Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-04-11T14:59:54Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://c5847d6cd297ab2fa7dcf26d2111ba220411208f72b1844fcbe07cfacd28b2c5
      image: docker.io/library/nginx:latest
      imageID: docker.io/library/nginx@sha256:09369da6b10306312cd908661320086bf87fbae1b6b0c49a1f50ba531fef2eab
      lastState: {}
      name: nginx2
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-04-11T14:59:57Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-w6zj8
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 65.108.62.223
    hostIPs:
    - ip: 65.108.62.223
    phase: Running
    podIP: 10.233.66.185
    podIPs:
    - ip: 10.233.66.185
    qosClass: BestEffort
    startTime: "2025-04-11T14:59:54Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"labels":{"author":"farrukh","last":"final"},"name":"nginx1","namespace":"farrukh-final"},"spec":{"containers":[{"image":"nginx","name":"nginx"}]}}
    creationTimestamp: "2025-04-11T16:23:13Z"
    labels:
      author: farrukh
      last: final
    name: nginx1
    namespace: farrukh-final
    resourceVersion: "20487405"
    uid: 0ab37e49-6b94-4d52-888d-93f31bfeb209
  spec:
    containers:
    - image: nginx
      imagePullPolicy: Always
      name: nginx
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vxh92
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: node1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-vxh92
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-04-11T16:23:15Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-04-11T16:23:13Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-04-11T16:23:15Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-04-11T16:23:15Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-04-11T16:23:13Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://a32a12bba3c0ec283c025e6908b408c4ecf79cbedab0953c7810114ce99ffeb5
      image: docker.io/library/nginx:latest
      imageID: docker.io/library/nginx@sha256:09369da6b10306312cd908661320086bf87fbae1b6b0c49a1f50ba531fef2eab
      lastState: {}
      name: nginx
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-04-11T16:23:15Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vxh92
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 65.21.184.121
    hostIPs:
    - ip: 65.21.184.121
    phase: Running
    podIP: 10.233.65.235
    podIPs:
    - ip: 10.233.65.235
    qosClass: BestEffort
    startTime: "2025-04-11T16:23:13Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"labels":{"author":"farrukh","last":"final"},"name":"nginx2","namespace":"farrukh-final"},"spec":{"containers":[{"image":"nginx","name":"nginx"}]}}
    creationTimestamp: "2025-04-11T16:23:13Z"
    labels:
      author: farrukh
      last: final
    name: nginx2
    namespace: farrukh-final
    resourceVersion: "20487410"
    uid: 64f0c6f7-4e3e-400b-8d3e-e2b4d94d4b19
  spec:
    containers:
    - image: nginx
      imagePullPolicy: Always
      name: nginx
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xvqgp
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: node2
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-xvqgp
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-04-11T16:23:16Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-04-11T16:23:13Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-04-11T16:23:16Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-04-11T16:23:16Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-04-11T16:23:13Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://4db743e63d22841d7ff9d9d3b91f0486d0060213f8156c23cf852c64ef58c6de
      image: docker.io/library/nginx:latest
      imageID: docker.io/library/nginx@sha256:09369da6b10306312cd908661320086bf87fbae1b6b0c49a1f50ba531fef2eab
      lastState: {}
      name: nginx
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-04-11T16:23:15Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xvqgp
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 65.108.62.223
    hostIPs:
    - ip: 65.108.62.223
    phase: Running
    podIP: 10.233.66.132
    podIPs:
    - ip: 10.233.66.132
    qosClass: BestEffort
    startTime: "2025-04-11T16:23:13Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-04-11T15:42:24Z"
    labels:
      author: fayoz
      last: final
    name: nginx1
    namespace: fayoz-final
    resourceVersion: "20473195"
    uid: 2a78802e-b10c-4800-bce8-647f9864dfa0
  spec:
    containers:
    - image: nginx
      imagePullPolicy: Always
      name: nginx1
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-kfn97
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: node3
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-kfn97
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-04-11T15:42:27Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-04-11T15:42:24Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-04-11T15:42:27Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-04-11T15:42:27Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-04-11T15:42:24Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://14543af25ba21a59204b9fae889b7f4eaebf298b88b29464fc49a7d762f0779f
      image: docker.io/library/nginx:latest
      imageID: docker.io/library/nginx@sha256:09369da6b10306312cd908661320086bf87fbae1b6b0c49a1f50ba531fef2eab
      lastState: {}
      name: nginx1
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-04-11T15:42:26Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-kfn97
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 65.21.148.14
    hostIPs:
    - ip: 65.21.148.14
    phase: Running
    podIP: 10.233.67.243
    podIPs:
    - ip: 10.233.67.243
    qosClass: BestEffort
    startTime: "2025-04-11T15:42:24Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-04-11T15:42:44Z"
    labels:
      author: fayoz
      last: final
    name: nginx2
    namespace: fayoz-final
    resourceVersion: "20473290"
    uid: a9b03197-310c-4836-9388-a23f649073dc
  spec:
    containers:
    - image: nginx
      imagePullPolicy: Always
      name: nginx2
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hp9wg
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: node1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-hp9wg
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-04-11T15:42:47Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-04-11T15:42:44Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-04-11T15:42:47Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-04-11T15:42:47Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-04-11T15:42:44Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://8b865ef3ac6a70f76ebff420a91eaf56ba450bfff5619c7926067f09735d7f98
      image: docker.io/library/nginx:latest
      imageID: docker.io/library/nginx@sha256:09369da6b10306312cd908661320086bf87fbae1b6b0c49a1f50ba531fef2eab
      lastState: {}
      name: nginx2
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-04-11T15:42:46Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hp9wg
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 65.21.184.121
    hostIPs:
    - ip: 65.21.184.121
    phase: Running
    podIP: 10.233.65.226
    podIPs:
    - ip: 10.233.65.226
    qosClass: BestEffort
    startTime: "2025-04-11T15:42:44Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"labels":{"author":"fazliddin","last":"final","run":"nginx1"},"name":"nginx1","namespace":"fazliddin-final"},"spec":{"containers":[{"image":"nginx","name":"nginx1","resources":{}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always"},"status":{}}
    creationTimestamp: "2025-04-11T14:56:36Z"
    labels:
      author: fazliddin
      last: final
      run: nginx1
    name: nginx1
    namespace: fazliddin-final
    resourceVersion: "20460670"
    uid: 4618ef14-0576-4553-9b15-b95ccfd952d5
  spec:
    containers:
    - image: nginx
      imagePullPolicy: Always
      name: nginx1
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-2289j
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: node2
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-2289j
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-04-11T14:56:38Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-04-11T14:56:36Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-04-11T14:56:38Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-04-11T14:56:38Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-04-11T14:56:36Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://5b36c0182d18ddae02f08b1be9e049104e0c11c71cf8f0872d7ed53e6e37d9a2
      image: docker.io/library/nginx:latest
      imageID: docker.io/library/nginx@sha256:09369da6b10306312cd908661320086bf87fbae1b6b0c49a1f50ba531fef2eab
      lastState: {}
      name: nginx1
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-04-11T14:56:38Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-2289j
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 65.108.62.223
    hostIPs:
    - ip: 65.108.62.223
    phase: Running
    podIP: 10.233.66.251
    podIPs:
    - ip: 10.233.66.251
    qosClass: BestEffort
    startTime: "2025-04-11T14:56:36Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"labels":{"author":"fazliddin","last":"final","run":"nginx2"},"name":"nginx2","namespace":"fazliddin-final"},"spec":{"containers":[{"image":"nginx","name":"nginx2","resources":{}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always"},"status":{}}
    creationTimestamp: "2025-04-11T14:56:32Z"
    labels:
      author: fazliddin
      last: final
      run: nginx2
    name: nginx2
    namespace: fazliddin-final
    resourceVersion: "20460630"
    uid: 63ae185a-4f08-4200-8eee-a139c871de50
  spec:
    containers:
    - image: nginx
      imagePullPolicy: Always
      name: nginx2
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-l2vqx
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: node3
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-l2vqx
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-04-11T14:56:34Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-04-11T14:56:32Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-04-11T14:56:34Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-04-11T14:56:34Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-04-11T14:56:32Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://2b3e2921fb3e97abb61de0e4eff00480c76e5e929093fecede2c2a2ac1b18e5d
      image: docker.io/library/nginx:latest
      imageID: docker.io/library/nginx@sha256:09369da6b10306312cd908661320086bf87fbae1b6b0c49a1f50ba531fef2eab
      lastState: {}
      name: nginx2
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-04-11T14:56:34Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-l2vqx
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 65.21.148.14
    hostIPs:
    - ip: 65.21.148.14
    phase: Running
    podIP: 10.233.67.251
    podIPs:
    - ip: 10.233.67.251
    qosClass: BestEffort
    startTime: "2025-04-11T14:56:32Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-04-12T13:36:05Z"
    labels:
      author: hasanboy
      last: final
    name: nginx1
    namespace: hasanboy-final
    resourceVersion: "21169933"
    uid: c918e2fc-fc08-448f-a9ba-a90ce52f0bb2
  spec:
    containers:
    - image: nginx
      imagePullPolicy: Always
      name: nginx1
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-m2gtn
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: node2
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-m2gtn
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-04-12T13:36:10Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-04-12T13:36:05Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-04-12T13:36:10Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-04-12T13:36:10Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-04-12T13:36:05Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://ae78c2652c0532c40ccefeb25101aa07e94999a3c3f1ff204e541ec18ed750f9
      image: docker.io/library/nginx:latest
      imageID: docker.io/library/nginx@sha256:09369da6b10306312cd908661320086bf87fbae1b6b0c49a1f50ba531fef2eab
      lastState: {}
      name: nginx1
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-04-12T13:36:09Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-m2gtn
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 65.108.62.223
    hostIPs:
    - ip: 65.108.62.223
    phase: Running
    podIP: 10.233.66.91
    podIPs:
    - ip: 10.233.66.91
    qosClass: BestEffort
    startTime: "2025-04-12T13:36:05Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-04-12T13:35:58Z"
    labels:
      author: hasanboy
      last: final
    name: nginx2
    namespace: hasanboy-final
    resourceVersion: "21169455"
    uid: cdfb5880-acaa-4dbc-8832-02f08f70b667
  spec:
    containers:
    - image: nginx
      imagePullPolicy: Always
      name: nginx2
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-kwjzb
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: node3
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-kwjzb
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-04-12T13:36:00Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-04-12T13:35:58Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-04-12T13:36:00Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-04-12T13:36:00Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-04-12T13:35:58Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://d4543e5f375c17aeda5ae92f6ee1f12663d1869b396916d6e91c20758efc49dd
      image: docker.io/library/nginx:latest
      imageID: docker.io/library/nginx@sha256:09369da6b10306312cd908661320086bf87fbae1b6b0c49a1f50ba531fef2eab
      lastState: {}
      name: nginx2
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-04-12T13:35:59Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-kwjzb
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 65.21.148.14
    hostIPs:
    - ip: 65.21.148.14
    phase: Running
    podIP: 10.233.67.105
    podIPs:
    - ip: 10.233.67.105
    qosClass: BestEffort
    startTime: "2025-04-12T13:35:58Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-04-12T16:07:25Z"
    labels:
      author: IBROHIM
      last: final
    name: nginx1
    namespace: ibrohim-final
    resourceVersion: "21323414"
    uid: 13dcd632-d7c4-4928-9206-00abfe6f3242
  spec:
    containers:
    - image: nginx
      imagePullPolicy: Always
      name: nginx1
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9nvvg
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: node2
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-9nvvg
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-04-12T16:07:29Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-04-12T16:07:25Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-04-12T16:07:29Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-04-12T16:07:29Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-04-12T16:07:25Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://e5467eb8fdb1135639880b7a358e0ce737be198477238ac42a496823d48f980a
      image: docker.io/library/nginx:latest
      imageID: docker.io/library/nginx@sha256:09369da6b10306312cd908661320086bf87fbae1b6b0c49a1f50ba531fef2eab
      lastState: {}
      name: nginx1
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-04-12T16:07:28Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9nvvg
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 65.108.62.223
    hostIPs:
    - ip: 65.108.62.223
    phase: Running
    podIP: 10.233.66.67
    podIPs:
    - ip: 10.233.66.67
    qosClass: BestEffort
    startTime: "2025-04-12T16:07:25Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-04-12T16:07:25Z"
    labels:
      author: IBROHIM
      last: final
    name: nginx2
    namespace: ibrohim-final
    resourceVersion: "21323407"
    uid: 1c9e20d1-72ad-487a-9fdf-fee95594bb54
  spec:
    containers:
    - image: nginx
      imagePullPolicy: Always
      name: nginx2
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9jm4k
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: node2
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-9jm4k
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-04-12T16:07:28Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-04-12T16:07:25Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-04-12T16:07:28Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-04-12T16:07:28Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-04-12T16:07:25Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://a0d39a249bbf1013556d8db1bfbd7902d6c56cc230256003a624e28b087f22b7
      image: docker.io/library/nginx:latest
      imageID: docker.io/library/nginx@sha256:09369da6b10306312cd908661320086bf87fbae1b6b0c49a1f50ba531fef2eab
      lastState: {}
      name: nginx2
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-04-12T16:07:27Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9jm4k
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 65.108.62.223
    hostIPs:
    - ip: 65.108.62.223
    phase: Running
    podIP: 10.233.66.165
    podIPs:
    - ip: 10.233.66.165
    qosClass: BestEffort
    startTime: "2025-04-12T16:07:25Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"creationTimestamp":null,"labels":{"author":"Jasurbek","last":"final","run":"nginx1"},"name":"nginx1","namespace":"j-jumanazarov"},"spec":{"containers":[{"image":"nginx","name":"nginx1","ports":[{"containerPort":80}],"resources":{}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always"},"status":{}}
    creationTimestamp: "2025-04-11T14:42:01Z"
    labels:
      author: Jasurbek
      last: final
      run: nginx1
    name: nginx1
    namespace: j-jumanazarov
    resourceVersion: "20459664"
    uid: 57254b0a-ecd8-4cb5-ab1b-7175cd2aa6ef
  spec:
    containers:
    - image: nginx
      imagePullPolicy: Always
      name: nginx1
      ports:
      - containerPort: 80
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-nsv29
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: node2
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-nsv29
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-04-11T14:42:03Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-04-11T14:42:01Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-04-11T14:42:03Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-04-11T14:42:03Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-04-11T14:42:01Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://da92db5c99f20dca89340dad576baa470cd12c9733670d75f310b819daaf4f1a
      image: docker.io/library/nginx:latest
      imageID: docker.io/library/nginx@sha256:09369da6b10306312cd908661320086bf87fbae1b6b0c49a1f50ba531fef2eab
      lastState: {}
      name: nginx1
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-04-11T14:42:03Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-nsv29
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 65.108.62.223
    hostIPs:
    - ip: 65.108.62.223
    phase: Running
    podIP: 10.233.66.248
    podIPs:
    - ip: 10.233.66.248
    qosClass: BestEffort
    startTime: "2025-04-11T14:42:01Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"creationTimestamp":null,"labels":{"author":"Jasurbek","last":"final","run":"nginx2"},"name":"nginx2","namespace":"j-jumanazarov"},"spec":{"containers":[{"image":"nginx","name":"nginx2","ports":[{"containerPort":80}],"resources":{}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always"},"status":{}}
    creationTimestamp: "2025-04-11T14:43:03Z"
    labels:
      author: Jasurbek
      last: final
      run: nginx2
    name: nginx2
    namespace: j-jumanazarov
    resourceVersion: "20459670"
    uid: dfe61f76-734b-4a3f-8e12-e595d8852f9a
  spec:
    containers:
    - image: nginx
      imagePullPolicy: Always
      name: nginx2
      ports:
      - containerPort: 80
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8nnhf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: node3
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-8nnhf
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-04-11T14:43:05Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-04-11T14:43:03Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-04-11T14:43:05Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-04-11T14:43:05Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-04-11T14:43:03Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://e360d389d1694954e76a62ac5e37711308b57d5d88f809c4d26ecc044bb6994b
      image: docker.io/library/nginx:latest
      imageID: docker.io/library/nginx@sha256:09369da6b10306312cd908661320086bf87fbae1b6b0c49a1f50ba531fef2eab
      lastState: {}
      name: nginx2
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-04-11T14:43:04Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8nnhf
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 65.21.148.14
    hostIPs:
    - ip: 65.21.148.14
    phase: Running
    podIP: 10.233.67.65
    podIPs:
    - ip: 10.233.67.65
    qosClass: BestEffort
    startTime: "2025-04-11T14:43:03Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-04-11T17:03:05Z"
    labels:
      author: jamshid
      last: final
      run: nginx1
    name: nginx1
    namespace: jamshid-final
    resourceVersion: "20506320"
    uid: c54c98d9-598b-41f0-a8f6-290eb5fbc325
  spec:
    containers:
    - image: nginx
      imagePullPolicy: Always
      name: nginx1
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hfc9d
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: node1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-hfc9d
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-04-11T17:03:08Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-04-11T17:03:06Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-04-11T17:03:08Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-04-11T17:03:08Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-04-11T17:03:05Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://b61c963d008a3860b3a2773597c3aaf4ea695a3f00432459143bee6101dcf556
      image: docker.io/library/nginx:latest
      imageID: docker.io/library/nginx@sha256:09369da6b10306312cd908661320086bf87fbae1b6b0c49a1f50ba531fef2eab
      lastState: {}
      name: nginx1
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-04-11T17:03:07Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hfc9d
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 65.21.184.121
    hostIPs:
    - ip: 65.21.184.121
    phase: Running
    podIP: 10.233.65.170
    podIPs:
    - ip: 10.233.65.170
    qosClass: BestEffort
    startTime: "2025-04-11T17:03:06Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-04-11T17:03:13Z"
    labels:
      author: jamshid
      last: final
      run: nginx2
    name: nginx2
    namespace: jamshid-final
    resourceVersion: "20506472"
    uid: 2ce3f9a6-bad9-42ae-b0f3-a0e330d8ca32
  spec:
    containers:
    - image: nginx
      imagePullPolicy: Always
      name: nginx2
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gz7rd
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: node3
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-gz7rd
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-04-11T17:03:16Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-04-11T17:03:13Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-04-11T17:03:16Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-04-11T17:03:16Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-04-11T17:03:13Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://e21393c9597c972c947ea41f7bef84ce018e74c618f9f41aa6cde9331e7bb187
      image: docker.io/library/nginx:latest
      imageID: docker.io/library/nginx@sha256:09369da6b10306312cd908661320086bf87fbae1b6b0c49a1f50ba531fef2eab
      lastState: {}
      name: nginx2
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-04-11T17:03:15Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gz7rd
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 65.21.148.14
    hostIPs:
    - ip: 65.21.148.14
    phase: Running
    podIP: 10.233.67.137
    podIPs:
    - ip: 10.233.67.137
    qosClass: BestEffort
    startTime: "2025-04-11T17:03:13Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"labels":{"app":"nginx","author":"khurshid","last":"final"},"name":"nginx1","namespace":"khurshid-final"},"spec":{"containers":[{"image":"nginx","name":"nginx"}]}}
    creationTimestamp: "2025-04-12T06:39:56Z"
    labels:
      app: nginx
      author: khurshid
      last: final
    name: nginx1
    namespace: khurshid-final
    resourceVersion: "20928320"
    uid: 198cc0de-16ce-4b3c-942a-ef276edf8167
  spec:
    containers:
    - image: nginx
      imagePullPolicy: Always
      name: nginx
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-lt5kt
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: node1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-lt5kt
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-04-12T06:39:58Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-04-12T06:39:56Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-04-12T06:39:58Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-04-12T06:39:58Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-04-12T06:39:56Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://2729f1c74c3858f2f68d46554c38cfde130d967e2d452b43397da95c14d14228
      image: docker.io/library/nginx:latest
      imageID: docker.io/library/nginx@sha256:09369da6b10306312cd908661320086bf87fbae1b6b0c49a1f50ba531fef2eab
      lastState: {}
      name: nginx
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-04-12T06:39:57Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-lt5kt
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 65.21.184.121
    hostIPs:
    - ip: 65.21.184.121
    phase: Running
    podIP: 10.233.65.119
    podIPs:
    - ip: 10.233.65.119
    qosClass: BestEffort
    startTime: "2025-04-12T06:39:56Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"labels":{"app":"nginx","author":"khurshid","last":"final"},"name":"nginx2","namespace":"khurshid-final"},"spec":{"containers":[{"image":"nginx","name":"nginx"}]}}
    creationTimestamp: "2025-04-12T06:39:56Z"
    labels:
      app: nginx
      author: khurshid
      last: final
    name: nginx2
    namespace: khurshid-final
    resourceVersion: "20928321"
    uid: 82352c09-6105-4a24-a418-eec61223e93c
  spec:
    containers:
    - image: nginx
      imagePullPolicy: Always
      name: nginx
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9s2d2
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: node3
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-9s2d2
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-04-12T06:39:58Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-04-12T06:39:56Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-04-12T06:39:58Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-04-12T06:39:58Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-04-12T06:39:56Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://58815d5ede05e8e75deea4e4f16704270f16ac53043748b6f4be2780d00d72ab
      image: docker.io/library/nginx:latest
      imageID: docker.io/library/nginx@sha256:09369da6b10306312cd908661320086bf87fbae1b6b0c49a1f50ba531fef2eab
      lastState: {}
      name: nginx
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-04-12T06:39:57Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9s2d2
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 65.21.148.14
    hostIPs:
    - ip: 65.21.148.14
    phase: Running
    podIP: 10.233.67.144
    podIPs:
    - ip: 10.233.67.144
    qosClass: BestEffort
    startTime: "2025-04-12T06:39:56Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-04-12T07:37:12Z"
    labels:
      author: Toshev_Osmon
      last: final
      run: nginx1
    name: nginx1
    namespace: osmon-final
    resourceVersion: "20957480"
    uid: 39aacdb9-8224-468a-abf7-caa693c71fb1
  spec:
    containers:
    - image: nginx
      imagePullPolicy: Always
      name: nginx1
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-k5kk8
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: node3
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-k5kk8
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-04-12T07:37:14Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-04-12T07:37:12Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-04-12T07:37:14Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-04-12T07:37:14Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-04-12T07:37:12Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://67ac291bacb48d0c0c4005bdc5e2c2e5953a5a764ee64ad2aa7abfe0095bd790
      image: docker.io/library/nginx:latest
      imageID: docker.io/library/nginx@sha256:09369da6b10306312cd908661320086bf87fbae1b6b0c49a1f50ba531fef2eab
      lastState: {}
      name: nginx1
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-04-12T07:37:13Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-k5kk8
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 65.21.148.14
    hostIPs:
    - ip: 65.21.148.14
    phase: Running
    podIP: 10.233.67.13
    podIPs:
    - ip: 10.233.67.13
    qosClass: BestEffort
    startTime: "2025-04-12T07:37:12Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-04-12T07:50:22Z"
    labels:
      author: xondamir
      last: final
    name: nginx1
    namespace: xondamir-final
    resourceVersion: "20964437"
    uid: a08a24f0-8cf5-490a-babe-c5d96ee37df1
  spec:
    containers:
    - image: nginx
      imagePullPolicy: Always
      name: nginx1
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-skqn7
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: node3
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-skqn7
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-04-12T07:50:24Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-04-12T07:50:22Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-04-12T07:50:24Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-04-12T07:50:24Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-04-12T07:50:22Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://0edafeab1aaf0210a3df19d74736de9802be23d45abf7194571d6c5d0288a5d8
      image: docker.io/library/nginx:latest
      imageID: docker.io/library/nginx@sha256:09369da6b10306312cd908661320086bf87fbae1b6b0c49a1f50ba531fef2eab
      lastState: {}
      name: nginx1
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-04-12T07:50:24Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-skqn7
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 65.21.148.14
    hostIPs:
    - ip: 65.21.148.14
    phase: Running
    podIP: 10.233.67.133
    podIPs:
    - ip: 10.233.67.133
    qosClass: BestEffort
    startTime: "2025-04-12T07:50:22Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-04-12T07:50:26Z"
    labels:
      author: xondamir
      last: final
    name: nginx2
    namespace: xondamir-final
    resourceVersion: "20964479"
    uid: 75791620-87a1-404e-a5da-0fe45f5ea538
  spec:
    containers:
    - image: nginx
      imagePullPolicy: Always
      name: nginx2
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-r8nps
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: node3
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-r8nps
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-04-12T07:50:27Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-04-12T07:50:26Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-04-12T07:50:27Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-04-12T07:50:27Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-04-12T07:50:26Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://4800e7e13e08fb693f42feb5308e24f5e623855754553f5c644ad8fd64f289ba
      image: docker.io/library/nginx:latest
      imageID: docker.io/library/nginx@sha256:09369da6b10306312cd908661320086bf87fbae1b6b0c49a1f50ba531fef2eab
      lastState: {}
      name: nginx2
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-04-12T07:50:27Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-r8nps
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 65.21.148.14
    hostIPs:
    - ip: 65.21.148.14
    phase: Running
    podIP: 10.233.67.122
    podIPs:
    - ip: 10.233.67.122
    qosClass: BestEffort
    startTime: "2025-04-12T07:50:26Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-04-11T14:17:28Z"
    labels:
      author: zoyirjon
      last: final
    name: nginx1
    namespace: zoyirjon-final
    resourceVersion: "20449920"
    uid: d5130915-0eba-400b-b84d-b86f0062766b
  spec:
    containers:
    - image: nginx
      imagePullPolicy: Always
      name: nginx1
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8ckd8
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: node2
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-8ckd8
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-04-11T14:17:35Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-04-11T14:17:28Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-04-11T14:17:35Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-04-11T14:17:35Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-04-11T14:17:28Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://765f939edfacfa4c6be8298978c1fd006c2f1aa763076fc0228c3946c29305f5
      image: docker.io/library/nginx:latest
      imageID: docker.io/library/nginx@sha256:09369da6b10306312cd908661320086bf87fbae1b6b0c49a1f50ba531fef2eab
      lastState: {}
      name: nginx1
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-04-11T14:17:34Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8ckd8
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 65.108.62.223
    hostIPs:
    - ip: 65.108.62.223
    phase: Running
    podIP: 10.233.66.252
    podIPs:
    - ip: 10.233.66.252
    qosClass: BestEffort
    startTime: "2025-04-11T14:17:28Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-04-11T14:17:35Z"
    labels:
      author: zoyirjon
      last: final
    name: nginx2
    namespace: zoyirjon-final
    resourceVersion: "20449938"
    uid: 3ef61386-6fcc-443f-ae10-4957c9ee072f
  spec:
    containers:
    - image: nginx
      imagePullPolicy: Always
      name: nginx2
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-5l4bm
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: node2
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-5l4bm
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-04-11T14:17:37Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-04-11T14:17:35Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-04-11T14:17:37Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-04-11T14:17:37Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-04-11T14:17:35Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://6e2fba23efb4846ee1a277d839217afe0cb43d1d9e02ea689ae1ac34dae4a5e3
      image: docker.io/library/nginx:latest
      imageID: docker.io/library/nginx@sha256:09369da6b10306312cd908661320086bf87fbae1b6b0c49a1f50ba531fef2eab
      lastState: {}
      name: nginx2
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-04-11T14:17:37Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-5l4bm
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 65.108.62.223
    hostIPs:
    - ip: 65.108.62.223
    phase: Running
    podIP: 10.233.66.42
    podIPs:
    - ip: 10.233.66.42
    qosClass: BestEffort
    startTime: "2025-04-11T14:17:35Z"
kind: List
metadata:
  resourceVersion: ""
